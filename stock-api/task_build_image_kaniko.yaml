apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-stock-api-image
spec:
  inputs:
    resources:
      - name: source
        type: git
    params:
      - name: context-dir
        description: The context dir of the project containing the Maven pom.xml file
        default: stock-api
      - name: docker-file
        description: Name of the Docker file to use
        default: Dockerfile
      - name: container-image
        description: Name of the container image to use
        default: stock-api
      - name: tlsVerify
        description: tls verify
        type: string
        default: "false"
      - name: base-version
        description: Base product version
        type: string
        default: "1.0"
  results:
    - name: timestamp
      description: Current timestamp                   
  steps:
    - name: get-timestamp
      image: bash:latest
      script: |
        #!/usr/bin/env bash
        date +%s | tee $(results.timestamp.path)
    - name: list-project-folder
      image: busybox
      command: ["ls", "-ltr", "/workspace/source/$(inputs.params.context-dir)"]
    - name: check-if-maven-is-installed-or-not
      image: docker.io/maven:3.6.3-openjdk-15
      command: ["mvn", "--version"]
    - name: build-jar-file
      image: docker.io/maven:3.6.3-openjdk-15
      workingDir: "/workspace/source/$(inputs.params.context-dir)"
      # command: ["mvn", "-DbuildId=$(inputs.params.base-version)-$(tasks.results.timestamp.path)", "clean", "package", "-DskipTests"]
      script: |
         #!/usr/bin/env bash
         ts=`cat $(tasks.results.timestamp.path)`
         buildId=$(inputs.params.base-version)-$ts
         echo "Build ID: ${buildId}"
         cmd="mvn --DbuildId=${buildId} clean package -DskipTests"
         echo "Command: ${cmd}"
         ${cmd}
    - name: list-project-folder-after-build
      image: quay.io/buildah/stable
      workingDir: "/workspace/source/$(inputs.params.context-dir)"
      command:
        - "ls"
      args:
        - "-alR"
        - "."      
    - name: build-container-image
      image: gcr.io/kaniko-project/executor:latest
      args: ["--dockerfile=/workspace/source/$(inputs.params.context-dir)/$(inputs.params.docker-file)",
             "--context=dir:///workspace/source/$(inputs.params.context-dir)",
             "--destination=mmehra/stock-api",
             "--verbosity=debug"] # replace with your dockerhub account
      volumeMounts:
      - name: kaniko-secret
        mountPath: /kaniko/.docker
  volumes:
    - name: kaniko-secret
      secret:
        secretName: regcred
        items:
          - key: .dockerconfigjson
            path: config.json
    - name: dockerfile-storage
      persistentVolumeClaim:
        claimName: dockerfile-claim        