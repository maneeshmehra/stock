apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-stock-api-image
spec:
  inputs:
    resources:
      - name: source
        type: git
    params:
      - name: context-dir
        description: The context dir of the project containing the Maven pom.xml file
        default: stock-api
      - name: docker-file
        description: Name of the Docker file to use
        default: Dockerfile
      - name: container-image
        description: Name of the container image to use
        default: stock-api
      - name: tlsVerify
        description: tls verify
        type: string
        default: "false"
      - name: base-version
        description: Base product version
        type: string
        default: "1.0"
  results:
    - name: timestamp
      description: Current timestamp
    - name: buildId
      description: BuildId                    
  steps:
    - name: get-timestamp
      image: bash:latest
      script: |
        #!/usr/bin/env bash
        ts=`date "+%Y%m%d-%H%M%S"`
        echo "Current Timestamp: ${ts}"
        echo ${ts} | tee $(results.timestamp.path)
    - name: get-buildid
      image: bash:latest
      script: |
        #!/usr/bin/env bash
        ts=`cat $(results.timestamp.path)`
        buildId=$(inputs.params.base-version)-${ts}
        echo ${buildId} | tee $(results.buildId.path)
        echo "Build ID: ${buildId}" 
    - name: list-project-folder
      image: busybox
      command: ["ls", "-ltr", "/workspace/source/$(inputs.params.context-dir)"]
    - name: build-jar-file
      image: docker.io/maven:3.6.3-openjdk-15
      workingDir: "/workspace/source/$(inputs.params.context-dir)"
      script: |
         #!/usr/bin/env bash
         buildId=`cat $(results.buildId.path)`
         cmd="mvn -DbuildId=${buildId} -DskipTests -ntp clean package"
         echo "Command: ${cmd}"
         ${cmd}    
    - name: build-container-image
      image: gcr.io/kaniko-project/executor:latest
      #args: ["--dockerfile=/workspace/source/$(inputs.params.context-dir)/$(inputs.params.docker-file)",
      #       "--context=dir:///workspace/source/$(inputs.params.context-dir)",
      #       "--destination=mmehra/stock-api",
      #       "--verbosity=debug"] # replace with your dockerhub account
      script: |
         /bin/sh -c "/kaniko/executor \
         --dockerfile=/workspace/source/$(inputs.params.context-dir)/$(inputs.params.docker-file) \
         --context=dir:///workspace/source/$(inputs.params.context-dir) \
         --destination=mmehra/stock-api \
         --verbosity=debug"  
      volumeMounts:
      - name: kaniko-secret
        mountPath: /kaniko/.docker
  volumes:
    - name: kaniko-secret
      secret:
        secretName: regcred
        items:
          - key: .dockerconfigjson
            path: config.json
    - name: dockerfile-storage
      persistentVolumeClaim:
        claimName: dockerfile-claim        